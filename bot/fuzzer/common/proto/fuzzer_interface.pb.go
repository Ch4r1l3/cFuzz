// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fuzzer_interface.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ff9b483743270f, []int{0}
}

func (m *ErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorResponse.Unmarshal(m, b)
}
func (m *ErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorResponse.Marshal(b, m, deterministic)
}
func (m *ErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorResponse.Merge(m, src)
}
func (m *ErrorResponse) XXX_Size() int {
	return xxx_messageInfo_ErrorResponse.Size(m)
}
func (m *ErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorResponse proto.InternalMessageInfo

func (m *ErrorResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type StringMap struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringMap) Reset()         { *m = StringMap{} }
func (m *StringMap) String() string { return proto.CompactTextString(m) }
func (*StringMap) ProtoMessage()    {}
func (*StringMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ff9b483743270f, []int{1}
}

func (m *StringMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringMap.Unmarshal(m, b)
}
func (m *StringMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringMap.Marshal(b, m, deterministic)
}
func (m *StringMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringMap.Merge(m, src)
}
func (m *StringMap) XXX_Size() int {
	return xxx_messageInfo_StringMap.Size(m)
}
func (m *StringMap) XXX_DiscardUnknown() {
	xxx_messageInfo_StringMap.DiscardUnknown(m)
}

var xxx_messageInfo_StringMap proto.InternalMessageInfo

func (m *StringMap) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StringMap) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type PrepareArg struct {
	CorpusDir            string            `protobuf:"bytes,1,opt,name=corpusDir,proto3" json:"corpusDir,omitempty"`
	TargetPath           string            `protobuf:"bytes,2,opt,name=targetPath,proto3" json:"targetPath,omitempty"`
	Arguments            map[string]string `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Enviroments          []string          `protobuf:"bytes,4,rep,name=enviroments,proto3" json:"enviroments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PrepareArg) Reset()         { *m = PrepareArg{} }
func (m *PrepareArg) String() string { return proto.CompactTextString(m) }
func (*PrepareArg) ProtoMessage()    {}
func (*PrepareArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ff9b483743270f, []int{2}
}

func (m *PrepareArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareArg.Unmarshal(m, b)
}
func (m *PrepareArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareArg.Marshal(b, m, deterministic)
}
func (m *PrepareArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareArg.Merge(m, src)
}
func (m *PrepareArg) XXX_Size() int {
	return xxx_messageInfo_PrepareArg.Size(m)
}
func (m *PrepareArg) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareArg.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareArg proto.InternalMessageInfo

func (m *PrepareArg) GetCorpusDir() string {
	if m != nil {
		return m.CorpusDir
	}
	return ""
}

func (m *PrepareArg) GetTargetPath() string {
	if m != nil {
		return m.TargetPath
	}
	return ""
}

func (m *PrepareArg) GetArguments() map[string]string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *PrepareArg) GetEnviroments() []string {
	if m != nil {
		return m.Enviroments
	}
	return nil
}

type FuzzArg struct {
	TargetPath           string   `protobuf:"bytes,1,opt,name=targetPath,proto3" json:"targetPath,omitempty"`
	MaxTime              int32    `protobuf:"varint,2,opt,name=maxTime,proto3" json:"maxTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FuzzArg) Reset()         { *m = FuzzArg{} }
func (m *FuzzArg) String() string { return proto.CompactTextString(m) }
func (*FuzzArg) ProtoMessage()    {}
func (*FuzzArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ff9b483743270f, []int{3}
}

func (m *FuzzArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FuzzArg.Unmarshal(m, b)
}
func (m *FuzzArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FuzzArg.Marshal(b, m, deterministic)
}
func (m *FuzzArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FuzzArg.Merge(m, src)
}
func (m *FuzzArg) XXX_Size() int {
	return xxx_messageInfo_FuzzArg.Size(m)
}
func (m *FuzzArg) XXX_DiscardUnknown() {
	xxx_messageInfo_FuzzArg.DiscardUnknown(m)
}

var xxx_messageInfo_FuzzArg proto.InternalMessageInfo

func (m *FuzzArg) GetTargetPath() string {
	if m != nil {
		return m.TargetPath
	}
	return ""
}

func (m *FuzzArg) GetMaxTime() int32 {
	if m != nil {
		return m.MaxTime
	}
	return 0
}

type ReproduceArg struct {
	TargetPath           string   `protobuf:"bytes,1,opt,name=targetPath,proto3" json:"targetPath,omitempty"`
	InputPath            string   `protobuf:"bytes,2,opt,name=inputPath,proto3" json:"inputPath,omitempty"`
	MaxTime              int32    `protobuf:"varint,3,opt,name=maxTime,proto3" json:"maxTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReproduceArg) Reset()         { *m = ReproduceArg{} }
func (m *ReproduceArg) String() string { return proto.CompactTextString(m) }
func (*ReproduceArg) ProtoMessage()    {}
func (*ReproduceArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ff9b483743270f, []int{4}
}

func (m *ReproduceArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReproduceArg.Unmarshal(m, b)
}
func (m *ReproduceArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReproduceArg.Marshal(b, m, deterministic)
}
func (m *ReproduceArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReproduceArg.Merge(m, src)
}
func (m *ReproduceArg) XXX_Size() int {
	return xxx_messageInfo_ReproduceArg.Size(m)
}
func (m *ReproduceArg) XXX_DiscardUnknown() {
	xxx_messageInfo_ReproduceArg.DiscardUnknown(m)
}

var xxx_messageInfo_ReproduceArg proto.InternalMessageInfo

func (m *ReproduceArg) GetTargetPath() string {
	if m != nil {
		return m.TargetPath
	}
	return ""
}

func (m *ReproduceArg) GetInputPath() string {
	if m != nil {
		return m.InputPath
	}
	return ""
}

func (m *ReproduceArg) GetMaxTime() int32 {
	if m != nil {
		return m.MaxTime
	}
	return 0
}

type MinimizeCorpusArg struct {
	TargetPath           string   `protobuf:"bytes,1,opt,name=targetPath,proto3" json:"targetPath,omitempty"`
	InputDir             string   `protobuf:"bytes,2,opt,name=inputDir,proto3" json:"inputDir,omitempty"`
	OutputDir            string   `protobuf:"bytes,3,opt,name=outputDir,proto3" json:"outputDir,omitempty"`
	MaxTime              int32    `protobuf:"varint,4,opt,name=maxTime,proto3" json:"maxTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MinimizeCorpusArg) Reset()         { *m = MinimizeCorpusArg{} }
func (m *MinimizeCorpusArg) String() string { return proto.CompactTextString(m) }
func (*MinimizeCorpusArg) ProtoMessage()    {}
func (*MinimizeCorpusArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ff9b483743270f, []int{5}
}

func (m *MinimizeCorpusArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinimizeCorpusArg.Unmarshal(m, b)
}
func (m *MinimizeCorpusArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinimizeCorpusArg.Marshal(b, m, deterministic)
}
func (m *MinimizeCorpusArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinimizeCorpusArg.Merge(m, src)
}
func (m *MinimizeCorpusArg) XXX_Size() int {
	return xxx_messageInfo_MinimizeCorpusArg.Size(m)
}
func (m *MinimizeCorpusArg) XXX_DiscardUnknown() {
	xxx_messageInfo_MinimizeCorpusArg.DiscardUnknown(m)
}

var xxx_messageInfo_MinimizeCorpusArg proto.InternalMessageInfo

func (m *MinimizeCorpusArg) GetTargetPath() string {
	if m != nil {
		return m.TargetPath
	}
	return ""
}

func (m *MinimizeCorpusArg) GetInputDir() string {
	if m != nil {
		return m.InputDir
	}
	return ""
}

func (m *MinimizeCorpusArg) GetOutputDir() string {
	if m != nil {
		return m.OutputDir
	}
	return ""
}

func (m *MinimizeCorpusArg) GetMaxTime() int32 {
	if m != nil {
		return m.MaxTime
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ff9b483743270f, []int{6}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ErrorResponse)(nil), "proto.ErrorResponse")
	proto.RegisterType((*StringMap)(nil), "proto.StringMap")
	proto.RegisterType((*PrepareArg)(nil), "proto.PrepareArg")
	proto.RegisterMapType((map[string]string)(nil), "proto.PrepareArg.ArgumentsEntry")
	proto.RegisterType((*FuzzArg)(nil), "proto.FuzzArg")
	proto.RegisterType((*ReproduceArg)(nil), "proto.ReproduceArg")
	proto.RegisterType((*MinimizeCorpusArg)(nil), "proto.MinimizeCorpusArg")
	proto.RegisterType((*Empty)(nil), "proto.Empty")
}

func init() { proto.RegisterFile("fuzzer_interface.proto", fileDescriptor_41ff9b483743270f) }

var fileDescriptor_41ff9b483743270f = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x51, 0x8b, 0xd3, 0x40,
	0x10, 0x26, 0x4d, 0x73, 0x35, 0x73, 0x67, 0xf1, 0xd6, 0x43, 0x42, 0x39, 0x24, 0x04, 0x84, 0x82,
	0xd2, 0x87, 0x1e, 0x88, 0x88, 0x88, 0x47, 0xed, 0xbd, 0x1d, 0x1c, 0xd1, 0x77, 0x59, 0xeb, 0xb4,
	0x2e, 0x5e, 0x76, 0x97, 0xe9, 0xee, 0x61, 0xf3, 0x07, 0x7c, 0xf6, 0x6f, 0xfa, 0x2b, 0x64, 0x93,
	0x6d, 0x93, 0xd0, 0x2b, 0xf4, 0x29, 0x99, 0x6f, 0xe6, 0xfb, 0x66, 0xbe, 0x99, 0x85, 0x17, 0x4b,
	0x5b, 0x96, 0x48, 0xdf, 0x84, 0x34, 0x48, 0x4b, 0xbe, 0xc0, 0x89, 0x26, 0x65, 0x14, 0x8b, 0xaa,
	0x4f, 0xf6, 0x0a, 0x9e, 0xce, 0x89, 0x14, 0xe5, 0xb8, 0xd6, 0x4a, 0xae, 0x91, 0x5d, 0x40, 0x84,
	0x0e, 0x48, 0x82, 0x34, 0x18, 0xc7, 0x79, 0x1d, 0x64, 0x57, 0x10, 0x7f, 0x31, 0x24, 0xe4, 0xea,
	0x96, 0x6b, 0xf6, 0x0c, 0xc2, 0x5f, 0xb8, 0xf1, 0x05, 0xee, 0xd7, 0x91, 0x1e, 0xf8, 0xbd, 0xc5,
	0xa4, 0x57, 0x93, 0xaa, 0x20, 0xfb, 0x17, 0x00, 0xdc, 0x11, 0x6a, 0x4e, 0x78, 0x4d, 0x2b, 0x76,
	0x09, 0xf1, 0x42, 0x91, 0xb6, 0xeb, 0xcf, 0x62, 0xab, 0xde, 0x00, 0xec, 0x25, 0x80, 0xe1, 0xb4,
	0x42, 0x73, 0xc7, 0xcd, 0x4f, 0xaf, 0xd3, 0x42, 0xd8, 0x47, 0x88, 0x39, 0xad, 0x6c, 0x81, 0xd2,
	0xac, 0x93, 0x30, 0x0d, 0xc7, 0xa7, 0xd3, 0xb4, 0xb6, 0x32, 0x69, 0x7a, 0x4c, 0xae, 0xb7, 0x25,
	0x73, 0x69, 0x68, 0x93, 0x37, 0x14, 0x96, 0xc2, 0x29, 0xca, 0x07, 0x41, 0xaa, 0x56, 0xe8, 0xa7,
	0xe1, 0x38, 0xce, 0xdb, 0xd0, 0xe8, 0x03, 0x0c, 0xbb, 0xf4, 0x63, 0x8d, 0xbe, 0xef, 0xbd, 0x0b,
	0xb2, 0x19, 0x0c, 0x6e, 0x6c, 0x59, 0x3a, 0xa3, 0x5d, 0x2b, 0xc1, 0x9e, 0x95, 0x04, 0x06, 0x05,
	0xff, 0xfd, 0x55, 0x14, 0xb5, 0x4c, 0x94, 0x6f, 0xc3, 0x6c, 0x09, 0x67, 0x39, 0x6a, 0x52, 0x3f,
	0xec, 0x02, 0x8f, 0x51, 0xba, 0x84, 0x58, 0x48, 0x6d, 0xdb, 0x3b, 0x6b, 0x80, 0x76, 0x9f, 0xb0,
	0xdb, 0xe7, 0x4f, 0x00, 0xe7, 0xb7, 0x42, 0x8a, 0x42, 0x94, 0x38, 0xab, 0x4e, 0x70, 0x4c, 0xb7,
	0x11, 0x3c, 0xa9, 0xc4, 0xdd, 0xfd, 0xea, 0x66, 0xbb, 0xd8, 0x4d, 0xa2, 0xac, 0xf1, 0xc9, 0xb0,
	0x9e, 0x64, 0x07, 0xb4, 0x27, 0xe9, 0x77, 0x27, 0x19, 0x40, 0x34, 0x2f, 0xb4, 0xd9, 0x4c, 0xff,
	0xf6, 0xe0, 0xe4, 0xa6, 0x7a, 0xaa, 0x6c, 0x0a, 0x03, 0x7f, 0x52, 0x76, 0xbe, 0x77, 0xe2, 0xd1,
	0x85, 0x87, 0xba, 0xcf, 0xf6, 0x0d, 0xf4, 0x1d, 0x9b, 0x0d, 0x7d, 0xd6, 0xdf, 0xe2, 0x40, 0xf5,
	0x5b, 0x88, 0x77, 0x7b, 0x66, 0xcf, 0x7d, 0x49, 0x7b, 0xf3, 0x07, 0x78, 0x9f, 0x60, 0xd8, 0x5d,
	0x1b, 0x4b, 0x7c, 0xdd, 0xde, 0x36, 0x0f, 0x28, 0xbc, 0x86, 0x68, 0x76, 0x8f, 0x5c, 0xb2, 0xb3,
	0x6d, 0xda, 0xb9, 0x7f, 0xbc, 0xf8, 0xfb, 0x49, 0x05, 0x5e, 0xfd, 0x0f, 0x00, 0x00, 0xff, 0xff,
	0x39, 0x6b, 0xc2, 0xbd, 0xc4, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FuzzerClient is the client API for Fuzzer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FuzzerClient interface {
	Prepare(ctx context.Context, in *PrepareArg, opts ...grpc.CallOption) (*ErrorResponse, error)
	Fuzz(ctx context.Context, in *FuzzArg, opts ...grpc.CallOption) (*ErrorResponse, error)
	Reproduce(ctx context.Context, in *ReproduceArg, opts ...grpc.CallOption) (*ErrorResponse, error)
	MinimizeCorpus(ctx context.Context, in *MinimizeCorpusArg, opts ...grpc.CallOption) (*ErrorResponse, error)
	Clean(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ErrorResponse, error)
}

type fuzzerClient struct {
	cc *grpc.ClientConn
}

func NewFuzzerClient(cc *grpc.ClientConn) FuzzerClient {
	return &fuzzerClient{cc}
}

func (c *fuzzerClient) Prepare(ctx context.Context, in *PrepareArg, opts ...grpc.CallOption) (*ErrorResponse, error) {
	out := new(ErrorResponse)
	err := c.cc.Invoke(ctx, "/proto.Fuzzer/Prepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuzzerClient) Fuzz(ctx context.Context, in *FuzzArg, opts ...grpc.CallOption) (*ErrorResponse, error) {
	out := new(ErrorResponse)
	err := c.cc.Invoke(ctx, "/proto.Fuzzer/Fuzz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuzzerClient) Reproduce(ctx context.Context, in *ReproduceArg, opts ...grpc.CallOption) (*ErrorResponse, error) {
	out := new(ErrorResponse)
	err := c.cc.Invoke(ctx, "/proto.Fuzzer/Reproduce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuzzerClient) MinimizeCorpus(ctx context.Context, in *MinimizeCorpusArg, opts ...grpc.CallOption) (*ErrorResponse, error) {
	out := new(ErrorResponse)
	err := c.cc.Invoke(ctx, "/proto.Fuzzer/MinimizeCorpus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuzzerClient) Clean(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ErrorResponse, error) {
	out := new(ErrorResponse)
	err := c.cc.Invoke(ctx, "/proto.Fuzzer/Clean", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FuzzerServer is the server API for Fuzzer service.
type FuzzerServer interface {
	Prepare(context.Context, *PrepareArg) (*ErrorResponse, error)
	Fuzz(context.Context, *FuzzArg) (*ErrorResponse, error)
	Reproduce(context.Context, *ReproduceArg) (*ErrorResponse, error)
	MinimizeCorpus(context.Context, *MinimizeCorpusArg) (*ErrorResponse, error)
	Clean(context.Context, *Empty) (*ErrorResponse, error)
}

// UnimplementedFuzzerServer can be embedded to have forward compatible implementations.
type UnimplementedFuzzerServer struct {
}

func (*UnimplementedFuzzerServer) Prepare(ctx context.Context, req *PrepareArg) (*ErrorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Prepare not implemented")
}
func (*UnimplementedFuzzerServer) Fuzz(ctx context.Context, req *FuzzArg) (*ErrorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fuzz not implemented")
}
func (*UnimplementedFuzzerServer) Reproduce(ctx context.Context, req *ReproduceArg) (*ErrorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reproduce not implemented")
}
func (*UnimplementedFuzzerServer) MinimizeCorpus(ctx context.Context, req *MinimizeCorpusArg) (*ErrorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MinimizeCorpus not implemented")
}
func (*UnimplementedFuzzerServer) Clean(ctx context.Context, req *Empty) (*ErrorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Clean not implemented")
}

func RegisterFuzzerServer(s *grpc.Server, srv FuzzerServer) {
	s.RegisterService(&_Fuzzer_serviceDesc, srv)
}

func _Fuzzer_Prepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuzzerServer).Prepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Fuzzer/Prepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuzzerServer).Prepare(ctx, req.(*PrepareArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fuzzer_Fuzz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FuzzArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuzzerServer).Fuzz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Fuzzer/Fuzz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuzzerServer).Fuzz(ctx, req.(*FuzzArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fuzzer_Reproduce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReproduceArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuzzerServer).Reproduce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Fuzzer/Reproduce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuzzerServer).Reproduce(ctx, req.(*ReproduceArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fuzzer_MinimizeCorpus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MinimizeCorpusArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuzzerServer).MinimizeCorpus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Fuzzer/MinimizeCorpus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuzzerServer).MinimizeCorpus(ctx, req.(*MinimizeCorpusArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fuzzer_Clean_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuzzerServer).Clean(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Fuzzer/Clean",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuzzerServer).Clean(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Fuzzer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Fuzzer",
	HandlerType: (*FuzzerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Prepare",
			Handler:    _Fuzzer_Prepare_Handler,
		},
		{
			MethodName: "Fuzz",
			Handler:    _Fuzzer_Fuzz_Handler,
		},
		{
			MethodName: "Reproduce",
			Handler:    _Fuzzer_Reproduce_Handler,
		},
		{
			MethodName: "MinimizeCorpus",
			Handler:    _Fuzzer_MinimizeCorpus_Handler,
		},
		{
			MethodName: "Clean",
			Handler:    _Fuzzer_Clean_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fuzzer_interface.proto",
}
