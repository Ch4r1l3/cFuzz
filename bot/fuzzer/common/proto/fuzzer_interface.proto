syntax = "proto3";
package proto;
 
message ErrorResponse {
    string error = 1;
}

message StringMap {
	string key = 1;
	string value = 2;
}

message PrepareArg {
	string corpusDir = 1;
	string targetPath = 2;
	map<string, string> arguments = 3;
	repeated string environments = 4;
}

message FuzzArg {
	int32 maxTime = 1;
}

message Crash {
	string inputPath = 1;
	repeated string reproduceArg = 2;
	repeated string environments = 3;
}

message FuzzResult {
	repeated string command = 1;
	repeated Crash crashes = 2;
	map<string, string> stats = 3;
	int32 timeExecuted = 4;
	string error = 5;
}

message ReproduceArg {
	string inputPath = 1;
	int32 maxTime = 2;
}

message ReproduceResult {
    	repeated string command = 1;
	int32 returnCode = 2;
	int32 timeExecuted = 3;
	repeated string output = 4;
	string error = 5;
}

message MinimizeCorpusArg {
	string inputDir = 1;
	string outputDir = 2;
	int32 maxTime = 3;
}

message MinimizeCorpusResult {
	repeated string command = 1;
	map<string, string> stats = 2;
	int32 timeExecuted = 3;
	string error = 4;
}
 
message Empty {}
 
service Fuzzer {
    rpc Prepare(PrepareArg) returns (ErrorResponse);
    rpc Fuzz(FuzzArg) returns (FuzzResult);
    rpc Reproduce(ReproduceArg) returns (ReproduceResult);
    rpc MinimizeCorpus(MinimizeCorpusArg) returns (MinimizeCorpusResult);
    rpc Clean(Empty) returns (ErrorResponse);
}
